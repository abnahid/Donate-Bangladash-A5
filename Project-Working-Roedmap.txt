### Required Tasks:

1. Navbar:
   ðŸ‘‰ Create a visually appealing navbar.âœ…
   ðŸ‘‰ The logo should be positioned in the middle.âœ…
   ðŸ‘‰ Add a Blog button on the left, and on the right:
     ðŸš€ Show the Account balance with a coin icon. âœ…
     ðŸš€ Include Donation and History buttons (design according to Figma). âœ…

2. Donation Cards Section 3 :
   ðŸ‘‰ Create three donation cards with:
     ðŸš€ Image on the left, title, info, current donation amount, and input field.
     ðŸš€ Add a Donate Now button to submit the donation. 

3. Donation Functionality:
   ðŸ‘‰ Deduct the donation amount from the total account balance when the donation is made, and show the updated balance.
   ðŸ‘‰ Show a meaningful notification in the History section when a donation is submitted.
   ðŸ‘‰ Validate the input:
     ðŸš€ Check if the donation amount is greater than the available balance, invalid, or empty. 

4. History Section:
   ðŸš€ Initially hidden.
   ðŸš€ Shows transaction details such as date, time, donation name, and amount after each donation. 

5. Toggle Buttons:
   ðŸš€ Clicking the History button should hide the donation cards and display the history section.
   ðŸš€ Clicking the Donation button should show the donation cards and hide the history. 


### Challenges:

1. Sticky Navbar:
   ðŸ‘‰ Ensure the navbar stays fixed at the top of the page when scrolling. 

2. Blog Page (Optional):
   ðŸ‘‰ Create a `blog.html` file that answers the following questions:
     ðŸš€ What is the Document Object Model (DOM)?
     ðŸš€ How do you select an element from the DOM?
     ðŸš€ What is event delegation, and why is it useful?
     ðŸš€ How do you manipulate an element's attributes and styles using the DOM? 

3. Input Modal:
   ðŸš€ Instead of an alert on a successful donation, show a static modal confirming the donation and updating the history. 
4. Button Active States:
   ðŸš€ Toggle the color of the Donation and History buttons based on which is active. 

5. Reusable Functions:
   ðŸš€ Implement at least two common functions for reusability. 

6. Responsive Design:
   ðŸš€ Ensure that the application is responsive across mobile, tablet, and desktop. 

âœ…